// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: wallet.proto

package bethela_rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionStatus int32

const (
	TransactionStatus_UMBIGUOUS TransactionStatus = 0
	TransactionStatus_PENDING   TransactionStatus = 1
	TransactionStatus_SUCCESS   TransactionStatus = 2
	TransactionStatus_FAILED    TransactionStatus = 3
)

// Enum value maps for TransactionStatus.
var (
	TransactionStatus_name = map[int32]string{
		0: "UMBIGUOUS",
		1: "PENDING",
		2: "SUCCESS",
		3: "FAILED",
	}
	TransactionStatus_value = map[string]int32{
		"UMBIGUOUS": 0,
		"PENDING":   1,
		"SUCCESS":   2,
		"FAILED":    3,
	}
)

func (x TransactionStatus) Enum() *TransactionStatus {
	p := new(TransactionStatus)
	*p = x
	return p
}

func (x TransactionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_proto_enumTypes[0].Descriptor()
}

func (TransactionStatus) Type() protoreflect.EnumType {
	return &file_wallet_proto_enumTypes[0]
}

func (x TransactionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionStatus.Descriptor instead.
func (TransactionStatus) EnumDescriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{0}
}

type LienType int32

const (
	LienType_ALL          LienType = 0
	LienType_WiTHDRAW     LienType = 1
	LienType_NON_WITHDRAW LienType = 2
	LienType_BONUS        LienType = 3
)

// Enum value maps for LienType.
var (
	LienType_name = map[int32]string{
		0: "ALL",
		1: "WiTHDRAW",
		2: "NON_WITHDRAW",
		3: "BONUS",
	}
	LienType_value = map[string]int32{
		"ALL":          0,
		"WiTHDRAW":     1,
		"NON_WITHDRAW": 2,
		"BONUS":        3,
	}
)

func (x LienType) Enum() *LienType {
	p := new(LienType)
	*p = x
	return p
}

func (x LienType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LienType) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_proto_enumTypes[1].Descriptor()
}

func (LienType) Type() protoreflect.EnumType {
	return &file_wallet_proto_enumTypes[1]
}

func (x LienType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LienType.Descriptor instead.
func (LienType) EnumDescriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{1}
}

type Money struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        int64                  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Money) Reset() {
	*x = Money{}
	mi := &file_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Money) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Money) ProtoMessage() {}

func (x *Money) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Money.ProtoReflect.Descriptor instead.
func (*Money) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *Money) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Money) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type Balance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BalanceType   string                 `protobuf:"bytes,1,opt,name=balance_type,json=balanceType,proto3" json:"balance_type,omitempty"`
	Amount        *Money                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Balance) Reset() {
	*x = Balance{}
	mi := &file_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *Balance) GetBalanceType() string {
	if x != nil {
		return x.BalanceType
	}
	return ""
}

func (x *Balance) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

type Wallet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WalletId      string                 `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Balances      []*Money               `protobuf:"bytes,2,rep,name=balances,proto3" json:"balances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	mi := &file_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *Wallet) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *Wallet) GetBalances() []*Money {
	if x != nil {
		return x.Balances
	}
	return nil
}

type C2BRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount        *Money                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C2BRequest) Reset() {
	*x = C2BRequest{}
	mi := &file_wallet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C2BRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2BRequest) ProtoMessage() {}

func (x *C2BRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2BRequest.ProtoReflect.Descriptor instead.
func (*C2BRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *C2BRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *C2BRequest) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

type B2CRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount        *Money                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *B2CRequest) Reset() {
	*x = B2CRequest{}
	mi := &file_wallet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *B2CRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*B2CRequest) ProtoMessage() {}

func (x *B2CRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use B2CRequest.ProtoReflect.Descriptor instead.
func (*B2CRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *B2CRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *B2CRequest) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

type TransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionRequest) Reset() {
	*x = TransactionRequest{}
	mi := &file_wallet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRequest) ProtoMessage() {}

func (x *TransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRequest.ProtoReflect.Descriptor instead.
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type TransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Status        TransactionStatus      `protobuf:"varint,2,opt,name=status,proto3,enum=wallet.TransactionStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Amount        *Money                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionResponse) Reset() {
	*x = TransactionResponse{}
	mi := &file_wallet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResponse) ProtoMessage() {}

func (x *TransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResponse.ProtoReflect.Descriptor instead.
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionResponse) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_UMBIGUOUS
}

func (x *TransactionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TransactionResponse) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

type TransactionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount        *Money                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Status        TransactionStatus      `protobuf:"varint,4,opt,name=status,proto3,enum=wallet.TransactionStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionInfo) Reset() {
	*x = TransactionInfo{}
	mi := &file_wallet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfo) ProtoMessage() {}

func (x *TransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfo.ProtoReflect.Descriptor instead.
func (*TransactionInfo) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *TransactionInfo) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TransactionInfo) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *TransactionInfo) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_UMBIGUOUS
}

func (x *TransactionInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetWalletByUserIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletByUserIDRequest) Reset() {
	*x = GetWalletByUserIDRequest{}
	mi := &file_wallet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletByUserIDRequest) ProtoMessage() {}

func (x *GetWalletByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletByUserIDRequest.ProtoReflect.Descriptor instead.
func (*GetWalletByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *GetWalletByUserIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletRequest) Reset() {
	*x = CreateWalletRequest{}
	mi := &file_wallet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRequest) ProtoMessage() {}

func (x *CreateWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *CreateWalletRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateWalletRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type GetWalletByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WalletId      string                 `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletByIDRequest) Reset() {
	*x = GetWalletByIDRequest{}
	mi := &file_wallet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletByIDRequest) ProtoMessage() {}

func (x *GetWalletByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletByIDRequest.ProtoReflect.Descriptor instead.
func (*GetWalletByIDRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *GetWalletByIDRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type GetBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WalletId      string                 `protobuf:"bytes,2,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	mi := &file_wallet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *GetBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBalanceRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type DepositRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Amount        *Money                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Status        TransactionStatus      `protobuf:"varint,3,opt,name=status,proto3,enum=wallet.TransactionStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DepositRequest) Reset() {
	*x = DepositRequest{}
	mi := &file_wallet_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositRequest) ProtoMessage() {}

func (x *DepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositRequest.ProtoReflect.Descriptor instead.
func (*DepositRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *DepositRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *DepositRequest) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *DepositRequest) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_UMBIGUOUS
}

type DepositResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DepositResponse) Reset() {
	*x = DepositResponse{}
	mi := &file_wallet_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositResponse) ProtoMessage() {}

func (x *DepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositResponse.ProtoReflect.Descriptor instead.
func (*DepositResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{13}
}

func (x *DepositResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type WithdrawRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Amount        *Money                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Status        TransactionStatus      `protobuf:"varint,3,opt,name=status,proto3,enum=wallet.TransactionStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WithdrawRequest) Reset() {
	*x = WithdrawRequest{}
	mi := &file_wallet_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRequest) ProtoMessage() {}

func (x *WithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRequest.ProtoReflect.Descriptor instead.
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{14}
}

func (x *WithdrawRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *WithdrawRequest) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *WithdrawRequest) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_UMBIGUOUS
}

type WithdrawResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WithdrawResponse) Reset() {
	*x = WithdrawResponse{}
	mi := &file_wallet_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawResponse) ProtoMessage() {}

func (x *WithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawResponse.ProtoReflect.Descriptor instead.
func (*WithdrawResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{15}
}

func (x *WithdrawResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LienRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount        *Money                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	LienType      LienType               `protobuf:"varint,3,opt,name=lien_type,json=lienType,proto3,enum=wallet.LienType" json:"lien_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LienRequest) Reset() {
	*x = LienRequest{}
	mi := &file_wallet_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LienRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LienRequest) ProtoMessage() {}

func (x *LienRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LienRequest.ProtoReflect.Descriptor instead.
func (*LienRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{16}
}

func (x *LienRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LienRequest) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *LienRequest) GetLienType() LienType {
	if x != nil {
		return x.LienType
	}
	return LienType_ALL
}

type LienResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LienId        uint64                 `protobuf:"varint,1,opt,name=lien_id,json=lienId,proto3" json:"lien_id,omitempty"`
	Status        TransactionStatus      `protobuf:"varint,2,opt,name=status,proto3,enum=wallet.TransactionStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LienResponse) Reset() {
	*x = LienResponse{}
	mi := &file_wallet_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LienResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LienResponse) ProtoMessage() {}

func (x *LienResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LienResponse.ProtoReflect.Descriptor instead.
func (*LienResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{17}
}

func (x *LienResponse) GetLienId() uint64 {
	if x != nil {
		return x.LienId
	}
	return 0
}

func (x *LienResponse) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_UMBIGUOUS
}

func (x *LienResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RevertLienRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LienId        uint64                 `protobuf:"varint,1,opt,name=lien_id,json=lienId,proto3" json:"lien_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevertLienRequest) Reset() {
	*x = RevertLienRequest{}
	mi := &file_wallet_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevertLienRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertLienRequest) ProtoMessage() {}

func (x *RevertLienRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertLienRequest.ProtoReflect.Descriptor instead.
func (*RevertLienRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{18}
}

func (x *RevertLienRequest) GetLienId() uint64 {
	if x != nil {
		return x.LienId
	}
	return 0
}

func (x *RevertLienRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RevertLienResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevertLienResponse) Reset() {
	*x = RevertLienResponse{}
	mi := &file_wallet_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevertLienResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertLienResponse) ProtoMessage() {}

func (x *RevertLienResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertLienResponse.ProtoReflect.Descriptor instead.
func (*RevertLienResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{19}
}

func (x *RevertLienResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RevertLienResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CommitLienRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LienId        uint64                 `protobuf:"varint,1,opt,name=lien_id,json=lienId,proto3" json:"lien_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitLienRequest) Reset() {
	*x = CommitLienRequest{}
	mi := &file_wallet_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitLienRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitLienRequest) ProtoMessage() {}

func (x *CommitLienRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitLienRequest.ProtoReflect.Descriptor instead.
func (*CommitLienRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{20}
}

func (x *CommitLienRequest) GetLienId() uint64 {
	if x != nil {
		return x.LienId
	}
	return 0
}

type CommitLienResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitLienResponse) Reset() {
	*x = CommitLienResponse{}
	mi := &file_wallet_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitLienResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitLienResponse) ProtoMessage() {}

func (x *CommitLienResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitLienResponse.ProtoReflect.Descriptor instead.
func (*CommitLienResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{21}
}

func (x *CommitLienResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommitLienResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ManualReconciliationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Amount        *Money                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManualReconciliationRequest) Reset() {
	*x = ManualReconciliationRequest{}
	mi := &file_wallet_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManualReconciliationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualReconciliationRequest) ProtoMessage() {}

func (x *ManualReconciliationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualReconciliationRequest.ProtoReflect.Descriptor instead.
func (*ManualReconciliationRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{22}
}

func (x *ManualReconciliationRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ManualReconciliationRequest) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

type ManualReconciliationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManualReconciliationResponse) Reset() {
	*x = ManualReconciliationResponse{}
	mi := &file_wallet_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManualReconciliationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualReconciliationResponse) ProtoMessage() {}

func (x *ManualReconciliationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualReconciliationResponse.ProtoReflect.Descriptor instead.
func (*ManualReconciliationResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{23}
}

func (x *ManualReconciliationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ManualReconciliationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListTransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WalletId      string                 `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTransactionsRequest) Reset() {
	*x = ListTransactionsRequest{}
	mi := &file_wallet_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionsRequest) ProtoMessage() {}

func (x *ListTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionsRequest.ProtoReflect.Descriptor instead.
func (*ListTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{24}
}

func (x *ListTransactionsRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *ListTransactionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTransactionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount        *Money                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Status        TransactionStatus      `protobuf:"varint,4,opt,name=status,proto3,enum=wallet.TransactionStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Reference     string                 `protobuf:"bytes,6,opt,name=reference,proto3" json:"reference,omitempty"`
	Description   string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Type          string                 `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_wallet_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{25}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Transaction) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Transaction) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_UMBIGUOUS
}

func (x *Transaction) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Transaction) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *Transaction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Transaction) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Transaction) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Transaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ListTransactionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transactions  []*Transaction         `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTransactionsResponse) Reset() {
	*x = ListTransactionsResponse{}
	mi := &file_wallet_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionsResponse) ProtoMessage() {}

func (x *ListTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionsResponse.ProtoReflect.Descriptor instead.
func (*ListTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{26}
}

func (x *ListTransactionsResponse) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *ListTransactionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListTransactionsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_wallet_proto protoreflect.FileDescriptor

const file_wallet_proto_rawDesc = "" +
	"\n" +
	"\fwallet.proto\x12\x06wallet\";\n" +
	"\x05Money\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x03R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\"S\n" +
	"\aBalance\x12!\n" +
	"\fbalance_type\x18\x01 \x01(\tR\vbalanceType\x12%\n" +
	"\x06amount\x18\x02 \x01(\v2\r.wallet.MoneyR\x06amount\"P\n" +
	"\x06Wallet\x12\x1b\n" +
	"\twallet_id\x18\x01 \x01(\tR\bwalletId\x12)\n" +
	"\bbalances\x18\x02 \x03(\v2\r.wallet.MoneyR\bbalances\"L\n" +
	"\n" +
	"C2BRequest\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12%\n" +
	"\x06amount\x18\x03 \x01(\v2\r.wallet.MoneyR\x06amount\"L\n" +
	"\n" +
	"B2CRequest\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12%\n" +
	"\x06amount\x18\x03 \x01(\v2\r.wallet.MoneyR\x06amount\";\n" +
	"\x12TransactionRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"\xb0\x01\n" +
	"\x13TransactionResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x121\n" +
	"\x06status\x18\x02 \x01(\x0e2\x19.wallet.TransactionStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12%\n" +
	"\x06amount\x18\x04 \x01(\v2\r.wallet.MoneyR\x06amount\"\xc5\x01\n" +
	"\x0fTransactionInfo\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12%\n" +
	"\x06amount\x18\x03 \x01(\v2\r.wallet.MoneyR\x06amount\x121\n" +
	"\x06status\x18\x04 \x01(\x0e2\x19.wallet.TransactionStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"3\n" +
	"\x18GetWalletByUserIDRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"J\n" +
	"\x13CreateWalletRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\"3\n" +
	"\x14GetWalletByIDRequest\x12\x1b\n" +
	"\twallet_id\x18\x01 \x01(\tR\bwalletId\"I\n" +
	"\x11GetBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\twallet_id\x18\x02 \x01(\tR\bwalletId\"\x91\x01\n" +
	"\x0eDepositRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12%\n" +
	"\x06amount\x18\x02 \x01(\v2\r.wallet.MoneyR\x06amount\x121\n" +
	"\x06status\x18\x03 \x01(\x0e2\x19.wallet.TransactionStatusR\x06status\"+\n" +
	"\x0fDepositResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x92\x01\n" +
	"\x0fWithdrawRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12%\n" +
	"\x06amount\x18\x02 \x01(\v2\r.wallet.MoneyR\x06amount\x121\n" +
	"\x06status\x18\x03 \x01(\x0e2\x19.wallet.TransactionStatusR\x06status\",\n" +
	"\x10WithdrawResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"|\n" +
	"\vLienRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12%\n" +
	"\x06amount\x18\x02 \x01(\v2\r.wallet.MoneyR\x06amount\x12-\n" +
	"\tlien_type\x18\x03 \x01(\x0e2\x10.wallet.LienTypeR\blienType\"t\n" +
	"\fLienResponse\x12\x17\n" +
	"\alien_id\x18\x01 \x01(\x04R\x06lienId\x121\n" +
	"\x06status\x18\x02 \x01(\x0e2\x19.wallet.TransactionStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"E\n" +
	"\x11RevertLienRequest\x12\x17\n" +
	"\alien_id\x18\x01 \x01(\x04R\x06lienId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"H\n" +
	"\x12RevertLienResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\",\n" +
	"\x11CommitLienRequest\x12\x17\n" +
	"\alien_id\x18\x01 \x01(\x04R\x06lienId\"H\n" +
	"\x12CommitLienResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"k\n" +
	"\x1bManualReconciliationRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12%\n" +
	"\x06amount\x18\x02 \x01(\v2\r.wallet.MoneyR\x06amount\"R\n" +
	"\x1cManualReconciliationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"r\n" +
	"\x17ListTransactionsRequest\x12\x1b\n" +
	"\twallet_id\x18\x01 \x01(\tR\bwalletId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\xbc\x02\n" +
	"\vTransaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12%\n" +
	"\x06amount\x18\x03 \x01(\v2\r.wallet.MoneyR\x06amount\x121\n" +
	"\x06status\x18\x04 \x01(\x0e2\x19.wallet.TransactionStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12\x1c\n" +
	"\treference\x18\x06 \x01(\tR\treference\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\x03R\tupdatedAt\x12\x12\n" +
	"\x04type\x18\n" +
	" \x01(\tR\x04type\"\x9c\x01\n" +
	"\x18ListTransactionsResponse\x127\n" +
	"\ftransactions\x18\x01 \x03(\v2\x13.wallet.TransactionR\ftransactions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount*H\n" +
	"\x11TransactionStatus\x12\r\n" +
	"\tUMBIGUOUS\x10\x00\x12\v\n" +
	"\aPENDING\x10\x01\x12\v\n" +
	"\aSUCCESS\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x03*>\n" +
	"\bLienType\x12\a\n" +
	"\x03ALL\x10\x00\x12\f\n" +
	"\bWiTHDRAW\x10\x01\x12\x10\n" +
	"\fNON_WITHDRAW\x10\x02\x12\t\n" +
	"\x05BONUS\x10\x032\xbf\a\n" +
	"\rWalletService\x126\n" +
	"\x03C2B\x12\x12.wallet.C2BRequest\x1a\x1b.wallet.TransactionResponse\x126\n" +
	"\x03B2C\x12\x12.wallet.B2CRequest\x1a\x1b.wallet.TransactionResponse\x12J\n" +
	"\x0fTransactionInfo\x12\x1a.wallet.TransactionRequest\x1a\x1b.wallet.TransactionResponse\x12:\n" +
	"\aDeposit\x12\x16.wallet.DepositRequest\x1a\x17.wallet.DepositResponse\x12=\n" +
	"\bWithdraw\x12\x17.wallet.WithdrawRequest\x1a\x18.wallet.WithdrawResponse\x125\n" +
	"\bTakeLien\x12\x13.wallet.LienRequest\x1a\x14.wallet.LienResponse\x12C\n" +
	"\n" +
	"Revertlien\x12\x19.wallet.RevertLienRequest\x1a\x1a.wallet.RevertLienResponse\x12D\n" +
	"\n" +
	"CommitLien\x12\x19.wallet.CommitLienRequest\x1a\x1b.wallet.TransactionResponse\x12a\n" +
	"\x14ManualReconciliation\x12#.wallet.ManualReconciliationRequest\x1a$.wallet.ManualReconciliationResponse\x12E\n" +
	"\x11GetWalletByUserID\x12 .wallet.GetWalletByUserIDRequest\x1a\x0e.wallet.Wallet\x12;\n" +
	"\fCreateWallet\x12\x1b.wallet.CreateWalletRequest\x1a\x0e.wallet.Wallet\x12=\n" +
	"\rGetWalletByID\x12\x1c.wallet.GetWalletByIDRequest\x1a\x0e.wallet.Wallet\x128\n" +
	"\n" +
	"GetBalance\x12\x19.wallet.GetBalanceRequest\x1a\x0f.wallet.Balance\x12U\n" +
	"\x10ListTransactions\x12\x1f.wallet.ListTransactionsRequest\x1a .wallet.ListTransactionsResponseB3Z1github.com/Silicon-Savannah-Solutions/bethela-rpcb\x06proto3"

var (
	file_wallet_proto_rawDescOnce sync.Once
	file_wallet_proto_rawDescData []byte
)

func file_wallet_proto_rawDescGZIP() []byte {
	file_wallet_proto_rawDescOnce.Do(func() {
		file_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wallet_proto_rawDesc), len(file_wallet_proto_rawDesc)))
	})
	return file_wallet_proto_rawDescData
}

var file_wallet_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_wallet_proto_goTypes = []any{
	(TransactionStatus)(0),               // 0: wallet.TransactionStatus
	(LienType)(0),                        // 1: wallet.LienType
	(*Money)(nil),                        // 2: wallet.Money
	(*Balance)(nil),                      // 3: wallet.Balance
	(*Wallet)(nil),                       // 4: wallet.Wallet
	(*C2BRequest)(nil),                   // 5: wallet.C2BRequest
	(*B2CRequest)(nil),                   // 6: wallet.B2CRequest
	(*TransactionRequest)(nil),           // 7: wallet.TransactionRequest
	(*TransactionResponse)(nil),          // 8: wallet.TransactionResponse
	(*TransactionInfo)(nil),              // 9: wallet.TransactionInfo
	(*GetWalletByUserIDRequest)(nil),     // 10: wallet.GetWalletByUserIDRequest
	(*CreateWalletRequest)(nil),          // 11: wallet.CreateWalletRequest
	(*GetWalletByIDRequest)(nil),         // 12: wallet.GetWalletByIDRequest
	(*GetBalanceRequest)(nil),            // 13: wallet.GetBalanceRequest
	(*DepositRequest)(nil),               // 14: wallet.DepositRequest
	(*DepositResponse)(nil),              // 15: wallet.DepositResponse
	(*WithdrawRequest)(nil),              // 16: wallet.WithdrawRequest
	(*WithdrawResponse)(nil),             // 17: wallet.WithdrawResponse
	(*LienRequest)(nil),                  // 18: wallet.LienRequest
	(*LienResponse)(nil),                 // 19: wallet.LienResponse
	(*RevertLienRequest)(nil),            // 20: wallet.RevertLienRequest
	(*RevertLienResponse)(nil),           // 21: wallet.RevertLienResponse
	(*CommitLienRequest)(nil),            // 22: wallet.CommitLienRequest
	(*CommitLienResponse)(nil),           // 23: wallet.CommitLienResponse
	(*ManualReconciliationRequest)(nil),  // 24: wallet.ManualReconciliationRequest
	(*ManualReconciliationResponse)(nil), // 25: wallet.ManualReconciliationResponse
	(*ListTransactionsRequest)(nil),      // 26: wallet.ListTransactionsRequest
	(*Transaction)(nil),                  // 27: wallet.Transaction
	(*ListTransactionsResponse)(nil),     // 28: wallet.ListTransactionsResponse
}
var file_wallet_proto_depIdxs = []int32{
	2,  // 0: wallet.Balance.amount:type_name -> wallet.Money
	2,  // 1: wallet.Wallet.balances:type_name -> wallet.Money
	2,  // 2: wallet.C2BRequest.amount:type_name -> wallet.Money
	2,  // 3: wallet.B2CRequest.amount:type_name -> wallet.Money
	0,  // 4: wallet.TransactionResponse.status:type_name -> wallet.TransactionStatus
	2,  // 5: wallet.TransactionResponse.amount:type_name -> wallet.Money
	2,  // 6: wallet.TransactionInfo.amount:type_name -> wallet.Money
	0,  // 7: wallet.TransactionInfo.status:type_name -> wallet.TransactionStatus
	2,  // 8: wallet.DepositRequest.amount:type_name -> wallet.Money
	0,  // 9: wallet.DepositRequest.status:type_name -> wallet.TransactionStatus
	2,  // 10: wallet.WithdrawRequest.amount:type_name -> wallet.Money
	0,  // 11: wallet.WithdrawRequest.status:type_name -> wallet.TransactionStatus
	2,  // 12: wallet.LienRequest.amount:type_name -> wallet.Money
	1,  // 13: wallet.LienRequest.lien_type:type_name -> wallet.LienType
	0,  // 14: wallet.LienResponse.status:type_name -> wallet.TransactionStatus
	2,  // 15: wallet.ManualReconciliationRequest.amount:type_name -> wallet.Money
	2,  // 16: wallet.Transaction.amount:type_name -> wallet.Money
	0,  // 17: wallet.Transaction.status:type_name -> wallet.TransactionStatus
	27, // 18: wallet.ListTransactionsResponse.transactions:type_name -> wallet.Transaction
	5,  // 19: wallet.WalletService.C2B:input_type -> wallet.C2BRequest
	6,  // 20: wallet.WalletService.B2C:input_type -> wallet.B2CRequest
	7,  // 21: wallet.WalletService.TransactionInfo:input_type -> wallet.TransactionRequest
	14, // 22: wallet.WalletService.Deposit:input_type -> wallet.DepositRequest
	16, // 23: wallet.WalletService.Withdraw:input_type -> wallet.WithdrawRequest
	18, // 24: wallet.WalletService.TakeLien:input_type -> wallet.LienRequest
	20, // 25: wallet.WalletService.Revertlien:input_type -> wallet.RevertLienRequest
	22, // 26: wallet.WalletService.CommitLien:input_type -> wallet.CommitLienRequest
	24, // 27: wallet.WalletService.ManualReconciliation:input_type -> wallet.ManualReconciliationRequest
	10, // 28: wallet.WalletService.GetWalletByUserID:input_type -> wallet.GetWalletByUserIDRequest
	11, // 29: wallet.WalletService.CreateWallet:input_type -> wallet.CreateWalletRequest
	12, // 30: wallet.WalletService.GetWalletByID:input_type -> wallet.GetWalletByIDRequest
	13, // 31: wallet.WalletService.GetBalance:input_type -> wallet.GetBalanceRequest
	26, // 32: wallet.WalletService.ListTransactions:input_type -> wallet.ListTransactionsRequest
	8,  // 33: wallet.WalletService.C2B:output_type -> wallet.TransactionResponse
	8,  // 34: wallet.WalletService.B2C:output_type -> wallet.TransactionResponse
	8,  // 35: wallet.WalletService.TransactionInfo:output_type -> wallet.TransactionResponse
	15, // 36: wallet.WalletService.Deposit:output_type -> wallet.DepositResponse
	17, // 37: wallet.WalletService.Withdraw:output_type -> wallet.WithdrawResponse
	19, // 38: wallet.WalletService.TakeLien:output_type -> wallet.LienResponse
	21, // 39: wallet.WalletService.Revertlien:output_type -> wallet.RevertLienResponse
	8,  // 40: wallet.WalletService.CommitLien:output_type -> wallet.TransactionResponse
	25, // 41: wallet.WalletService.ManualReconciliation:output_type -> wallet.ManualReconciliationResponse
	4,  // 42: wallet.WalletService.GetWalletByUserID:output_type -> wallet.Wallet
	4,  // 43: wallet.WalletService.CreateWallet:output_type -> wallet.Wallet
	4,  // 44: wallet.WalletService.GetWalletByID:output_type -> wallet.Wallet
	3,  // 45: wallet.WalletService.GetBalance:output_type -> wallet.Balance
	28, // 46: wallet.WalletService.ListTransactions:output_type -> wallet.ListTransactionsResponse
	33, // [33:47] is the sub-list for method output_type
	19, // [19:33] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_wallet_proto_init() }
func file_wallet_proto_init() {
	if File_wallet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wallet_proto_rawDesc), len(file_wallet_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wallet_proto_goTypes,
		DependencyIndexes: file_wallet_proto_depIdxs,
		EnumInfos:         file_wallet_proto_enumTypes,
		MessageInfos:      file_wallet_proto_msgTypes,
	}.Build()
	File_wallet_proto = out.File
	file_wallet_proto_goTypes = nil
	file_wallet_proto_depIdxs = nil
}
