// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.31.1
// source: casino_service.proto

package bethela_rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ListGamesRequest is used to list games with filters
type ListGamesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // Number of games per page
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"` // Pagination token
	Category      string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`                    // Filter by category
	Provider      string                 `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`                    // Filter by provider
	Currency      string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`                    // Filter by currency support
	Search        string                 `protobuf:"bytes,6,opt,name=search,proto3" json:"search,omitempty"`                        // Search by name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGamesRequest) Reset() {
	*x = ListGamesRequest{}
	mi := &file_casino_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesRequest) ProtoMessage() {}

func (x *ListGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesRequest.ProtoReflect.Descriptor instead.
func (*ListGamesRequest) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListGamesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListGamesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListGamesRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListGamesRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ListGamesRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ListGamesRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

// ListGamesResponse contains a list of games and pagination info
type ListGamesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Games         []*Game                `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`                                        // List of games
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // Token for next page
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`           // Total number of games
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGamesResponse) Reset() {
	*x = ListGamesResponse{}
	mi := &file_casino_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesResponse) ProtoMessage() {}

func (x *ListGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesResponse.ProtoReflect.Descriptor instead.
func (*ListGamesResponse) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListGamesResponse) GetGames() []*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

func (x *ListGamesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListGamesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// GetGameRequest is used to get a specific game
type GetGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"` // Game ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameRequest) Reset() {
	*x = GetGameRequest{}
	mi := &file_casino_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameRequest) ProtoMessage() {}

func (x *GetGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameRequest.ProtoReflect.Descriptor instead.
func (*GetGameRequest) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetGameRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

// GetCategoriesRequest is used to get game categories
type GetCategoriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoriesRequest) Reset() {
	*x = GetCategoriesRequest{}
	mi := &file_casino_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoriesRequest) ProtoMessage() {}

func (x *GetCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoriesRequest.ProtoReflect.Descriptor instead.
func (*GetCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{3}
}

// Category represents a game category
type Category struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                 // Category ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // Category name
	Icon          string                 `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`                             // Category icon
	GameCount     int32                  `protobuf:"varint,4,opt,name=game_count,json=gameCount,proto3" json:"game_count,omitempty"` // Number of games in category
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category) Reset() {
	*x = Category{}
	mi := &file_casino_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{4}
}

func (x *Category) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Category) GetGameCount() int32 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

// GetCategoriesResponse contains a list of game categories
type GetCategoriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Categories    []*Category            `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"` // List of categories
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoriesResponse) Reset() {
	*x = GetCategoriesResponse{}
	mi := &file_casino_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoriesResponse) ProtoMessage() {}

func (x *GetCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoriesResponse.ProtoReflect.Descriptor instead.
func (*GetCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetCategoriesResponse) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

// GetProvidersRequest is used to get game providers
type GetProvidersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProvidersRequest) Reset() {
	*x = GetProvidersRequest{}
	mi := &file_casino_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProvidersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProvidersRequest) ProtoMessage() {}

func (x *GetProvidersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProvidersRequest.ProtoReflect.Descriptor instead.
func (*GetProvidersRequest) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{6}
}

// Provider represents a game provider
type Provider struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                 // Provider ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // Provider name
	LogoUrl       string                 `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`        // Provider logo URL
	GameCount     int32                  `protobuf:"varint,4,opt,name=game_count,json=gameCount,proto3" json:"game_count,omitempty"` // Number of games from this provider
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Provider) Reset() {
	*x = Provider{}
	mi := &file_casino_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{7}
}

func (x *Provider) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Provider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Provider) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *Provider) GetGameCount() int32 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

// GetProvidersResponse contains a list of game providers
type GetProvidersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Providers     []*Provider            `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"` // List of providers
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProvidersResponse) Reset() {
	*x = GetProvidersResponse{}
	mi := &file_casino_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProvidersResponse) ProtoMessage() {}

func (x *GetProvidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProvidersResponse.ProtoReflect.Descriptor instead.
func (*GetProvidersResponse) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetProvidersResponse) GetProviders() []*Provider {
	if x != nil {
		return x.Providers
	}
	return nil
}

// ServiceLaunchRequest wraps the provider launch request for service use
type ServiceLaunchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`          // Game ID
	PlayerId      string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`    // Player ID
	Currency      string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`                    // Currency to play with
	DemoMode      bool                   `protobuf:"varint,4,opt,name=demo_mode,json=demoMode,proto3" json:"demo_mode,omitempty"`   // Whether to launch in demo mode
	Language      string                 `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`                    // Preferred language
	ReturnUrl     string                 `protobuf:"bytes,6,opt,name=return_url,json=returnUrl,proto3" json:"return_url,omitempty"` // URL to return to after game ends
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceLaunchRequest) Reset() {
	*x = ServiceLaunchRequest{}
	mi := &file_casino_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceLaunchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceLaunchRequest) ProtoMessage() {}

func (x *ServiceLaunchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceLaunchRequest.ProtoReflect.Descriptor instead.
func (*ServiceLaunchRequest) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{9}
}

func (x *ServiceLaunchRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *ServiceLaunchRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ServiceLaunchRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ServiceLaunchRequest) GetDemoMode() bool {
	if x != nil {
		return x.DemoMode
	}
	return false
}

func (x *ServiceLaunchRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ServiceLaunchRequest) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

// ServiceLaunchResponse wraps the provider launch response for service use
type ServiceLaunchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameUrl       string                 `protobuf:"bytes,1,opt,name=game_url,json=gameUrl,proto3" json:"game_url,omitempty"`       // URL to launch the game
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // Game session ID
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Session expiration time
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceLaunchResponse) Reset() {
	*x = ServiceLaunchResponse{}
	mi := &file_casino_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceLaunchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceLaunchResponse) ProtoMessage() {}

func (x *ServiceLaunchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceLaunchResponse.ProtoReflect.Descriptor instead.
func (*ServiceLaunchResponse) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{10}
}

func (x *ServiceLaunchResponse) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

func (x *ServiceLaunchResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ServiceLaunchResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// GetPlayerHistoryRequest is used to get a player's game history
type GetPlayerHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`       // Player ID
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`      // Number of items per page
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`    // Pagination token
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`    // Start date filter
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`          // End date filter
	GameId        string                 `protobuf:"bytes,6,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`             // Filter by game ID
	ProviderId    string                 `protobuf:"bytes,7,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"` // Filter by provider ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerHistoryRequest) Reset() {
	*x = GetPlayerHistoryRequest{}
	mi := &file_casino_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerHistoryRequest) ProtoMessage() {}

func (x *GetPlayerHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerHistoryRequest) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetPlayerHistoryRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GetPlayerHistoryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetPlayerHistoryRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *GetPlayerHistoryRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetPlayerHistoryRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetPlayerHistoryRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GetPlayerHistoryRequest) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

// GameSession represents a game session in the player's history
type GameSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`       // Session ID
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                // Game ID
	GameName      string                 `protobuf:"bytes,3,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`          // Game name
	ProviderId    string                 `protobuf:"bytes,4,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`    // Provider ID
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`       // Session start time
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`             // Session end time
	BetAmount     *Money                 `protobuf:"bytes,7,opt,name=bet_amount,json=betAmount,proto3" json:"bet_amount,omitempty"`       // Total bet amount
	WinAmount     *Money                 `protobuf:"bytes,8,opt,name=win_amount,json=winAmount,proto3" json:"win_amount,omitempty"`       // Total win amount
	NetPosition   *Money                 `protobuf:"bytes,9,opt,name=net_position,json=netPosition,proto3" json:"net_position,omitempty"` // Net gain/loss
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameSession) Reset() {
	*x = GameSession{}
	mi := &file_casino_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSession) ProtoMessage() {}

func (x *GameSession) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSession.ProtoReflect.Descriptor instead.
func (*GameSession) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{12}
}

func (x *GameSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GameSession) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GameSession) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *GameSession) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *GameSession) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GameSession) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GameSession) GetBetAmount() *Money {
	if x != nil {
		return x.BetAmount
	}
	return nil
}

func (x *GameSession) GetWinAmount() *Money {
	if x != nil {
		return x.WinAmount
	}
	return nil
}

func (x *GameSession) GetNetPosition() *Money {
	if x != nil {
		return x.NetPosition
	}
	return nil
}

// GetPlayerHistoryResponse contains a player's game history
type GetPlayerHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*GameSession         `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`                                  // List of game sessions
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // Token for next page
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`           // Total number of sessions
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerHistoryResponse) Reset() {
	*x = GetPlayerHistoryResponse{}
	mi := &file_casino_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerHistoryResponse) ProtoMessage() {}

func (x *GetPlayerHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerHistoryResponse) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetPlayerHistoryResponse) GetSessions() []*GameSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *GetPlayerHistoryResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *GetPlayerHistoryResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ProcessBetRequest is used internally to process a bet
type ProcessBetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProviderId    string                 `protobuf:"bytes,1,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"` // Provider ID
	BetRequest    *BetRequest            `protobuf:"bytes,2,opt,name=bet_request,json=betRequest,proto3" json:"bet_request,omitempty"` // Original bet request
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessBetRequest) Reset() {
	*x = ProcessBetRequest{}
	mi := &file_casino_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessBetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessBetRequest) ProtoMessage() {}

func (x *ProcessBetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessBetRequest.ProtoReflect.Descriptor instead.
func (*ProcessBetRequest) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{14}
}

func (x *ProcessBetRequest) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *ProcessBetRequest) GetBetRequest() *BetRequest {
	if x != nil {
		return x.BetRequest
	}
	return nil
}

// ProcessBetResponse is returned after processing a bet
type ProcessBetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // Transaction ID
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                                 // Whether the bet was successful
	ErrorCode     string                 `protobuf:"bytes,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`             // Error code if unsuccessful
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`    // Error message if unsuccessful
	Balance       *Money                 `protobuf:"bytes,5,opt,name=balance,proto3" json:"balance,omitempty"`                                  // Updated balance
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessBetResponse) Reset() {
	*x = ProcessBetResponse{}
	mi := &file_casino_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessBetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessBetResponse) ProtoMessage() {}

func (x *ProcessBetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessBetResponse.ProtoReflect.Descriptor instead.
func (*ProcessBetResponse) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{15}
}

func (x *ProcessBetResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ProcessBetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProcessBetResponse) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ProcessBetResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ProcessBetResponse) GetBalance() *Money {
	if x != nil {
		return x.Balance
	}
	return nil
}

// ProcessWinRequest is used internally to process a win
type ProcessWinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProviderId    string                 `protobuf:"bytes,1,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"` // Provider ID
	WinRequest    *WinRequest            `protobuf:"bytes,2,opt,name=win_request,json=winRequest,proto3" json:"win_request,omitempty"` // Original win request
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessWinRequest) Reset() {
	*x = ProcessWinRequest{}
	mi := &file_casino_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessWinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessWinRequest) ProtoMessage() {}

func (x *ProcessWinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessWinRequest.ProtoReflect.Descriptor instead.
func (*ProcessWinRequest) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{16}
}

func (x *ProcessWinRequest) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *ProcessWinRequest) GetWinRequest() *WinRequest {
	if x != nil {
		return x.WinRequest
	}
	return nil
}

// ProcessWinResponse is returned after processing a win
type ProcessWinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // Transaction ID
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                                 // Whether the win was successful
	ErrorCode     string                 `protobuf:"bytes,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`             // Error code if unsuccessful
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`    // Error message if unsuccessful
	Balance       *Money                 `protobuf:"bytes,5,opt,name=balance,proto3" json:"balance,omitempty"`                                  // Updated balance
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessWinResponse) Reset() {
	*x = ProcessWinResponse{}
	mi := &file_casino_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessWinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessWinResponse) ProtoMessage() {}

func (x *ProcessWinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessWinResponse.ProtoReflect.Descriptor instead.
func (*ProcessWinResponse) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{17}
}

func (x *ProcessWinResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ProcessWinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProcessWinResponse) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ProcessWinResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ProcessWinResponse) GetBalance() *Money {
	if x != nil {
		return x.Balance
	}
	return nil
}

// ProcessRollbackRequest is used internally to process a rollback
type ProcessRollbackRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProviderId      string                 `protobuf:"bytes,1,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`                // Provider ID
	RollbackRequest *RollbackRequest       `protobuf:"bytes,2,opt,name=rollback_request,json=rollbackRequest,proto3" json:"rollback_request,omitempty"` // Original rollback request
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ProcessRollbackRequest) Reset() {
	*x = ProcessRollbackRequest{}
	mi := &file_casino_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRollbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRollbackRequest) ProtoMessage() {}

func (x *ProcessRollbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRollbackRequest.ProtoReflect.Descriptor instead.
func (*ProcessRollbackRequest) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{18}
}

func (x *ProcessRollbackRequest) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *ProcessRollbackRequest) GetRollbackRequest() *RollbackRequest {
	if x != nil {
		return x.RollbackRequest
	}
	return nil
}

// ProcessRollbackResponse is returned after processing a rollback
type ProcessRollbackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // Transaction ID
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                                 // Whether the rollback was successful
	ErrorCode     string                 `protobuf:"bytes,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`             // Error code if unsuccessful
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`    // Error message if unsuccessful
	Balance       *Money                 `protobuf:"bytes,5,opt,name=balance,proto3" json:"balance,omitempty"`                                  // Updated balance
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessRollbackResponse) Reset() {
	*x = ProcessRollbackResponse{}
	mi := &file_casino_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRollbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRollbackResponse) ProtoMessage() {}

func (x *ProcessRollbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_casino_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRollbackResponse.ProtoReflect.Descriptor instead.
func (*ProcessRollbackResponse) Descriptor() ([]byte, []int) {
	return file_casino_service_proto_rawDescGZIP(), []int{19}
}

func (x *ProcessRollbackResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ProcessRollbackResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProcessRollbackResponse) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ProcessRollbackResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ProcessRollbackResponse) GetBalance() *Money {
	if x != nil {
		return x.Balance
	}
	return nil
}

var File_casino_service_proto protoreflect.FileDescriptor

const file_casino_service_proto_rawDesc = "" +
	"\n" +
	"\x14casino_service.proto\x12\x06casino\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\fwallet.proto\x1a\x15casino_provider.proto\"\xba\x01\n" +
	"\x10ListGamesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x1a\n" +
	"\bprovider\x18\x04 \x01(\tR\bprovider\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06search\x18\x06 \x01(\tR\x06search\"\x80\x01\n" +
	"\x11ListGamesResponse\x12\"\n" +
	"\x05games\x18\x01 \x03(\v2\f.casino.GameR\x05games\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\")\n" +
	"\x0eGetGameRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\"\x16\n" +
	"\x14GetCategoriesRequest\"a\n" +
	"\bCategory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04icon\x18\x03 \x01(\tR\x04icon\x12\x1d\n" +
	"\n" +
	"game_count\x18\x04 \x01(\x05R\tgameCount\"I\n" +
	"\x15GetCategoriesResponse\x120\n" +
	"\n" +
	"categories\x18\x01 \x03(\v2\x10.casino.CategoryR\n" +
	"categories\"\x15\n" +
	"\x13GetProvidersRequest\"h\n" +
	"\bProvider\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x19\n" +
	"\blogo_url\x18\x03 \x01(\tR\alogoUrl\x12\x1d\n" +
	"\n" +
	"game_count\x18\x04 \x01(\x05R\tgameCount\"F\n" +
	"\x14GetProvidersResponse\x12.\n" +
	"\tproviders\x18\x01 \x03(\v2\x10.casino.ProviderR\tproviders\"\xc0\x01\n" +
	"\x14ServiceLaunchRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x1b\n" +
	"\tdemo_mode\x18\x04 \x01(\bR\bdemoMode\x12\x1a\n" +
	"\blanguage\x18\x05 \x01(\tR\blanguage\x12\x1d\n" +
	"\n" +
	"return_url\x18\x06 \x01(\tR\treturnUrl\"\x8c\x01\n" +
	"\x15ServiceLaunchResponse\x12\x19\n" +
	"\bgame_url\x18\x01 \x01(\tR\agameUrl\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x129\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"\x9e\x02\n" +
	"\x17GetPlayerHistoryRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x129\n" +
	"\n" +
	"start_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x17\n" +
	"\agame_id\x18\x06 \x01(\tR\x06gameId\x12\x1f\n" +
	"\vprovider_id\x18\a \x01(\tR\n" +
	"providerId\"\x83\x03\n" +
	"\vGameSession\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\agame_id\x18\x02 \x01(\tR\x06gameId\x12\x1b\n" +
	"\tgame_name\x18\x03 \x01(\tR\bgameName\x12\x1f\n" +
	"\vprovider_id\x18\x04 \x01(\tR\n" +
	"providerId\x129\n" +
	"\n" +
	"start_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12,\n" +
	"\n" +
	"bet_amount\x18\a \x01(\v2\r.wallet.MoneyR\tbetAmount\x12,\n" +
	"\n" +
	"win_amount\x18\b \x01(\v2\r.wallet.MoneyR\twinAmount\x120\n" +
	"\fnet_position\x18\t \x01(\v2\r.wallet.MoneyR\vnetPosition\"\x94\x01\n" +
	"\x18GetPlayerHistoryResponse\x12/\n" +
	"\bsessions\x18\x01 \x03(\v2\x13.casino.GameSessionR\bsessions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"i\n" +
	"\x11ProcessBetRequest\x12\x1f\n" +
	"\vprovider_id\x18\x01 \x01(\tR\n" +
	"providerId\x123\n" +
	"\vbet_request\x18\x02 \x01(\v2\x12.casino.BetRequestR\n" +
	"betRequest\"\xc2\x01\n" +
	"\x12ProcessBetResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"error_code\x18\x03 \x01(\tR\terrorCode\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12'\n" +
	"\abalance\x18\x05 \x01(\v2\r.wallet.MoneyR\abalance\"i\n" +
	"\x11ProcessWinRequest\x12\x1f\n" +
	"\vprovider_id\x18\x01 \x01(\tR\n" +
	"providerId\x123\n" +
	"\vwin_request\x18\x02 \x01(\v2\x12.casino.WinRequestR\n" +
	"winRequest\"\xc2\x01\n" +
	"\x12ProcessWinResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"error_code\x18\x03 \x01(\tR\terrorCode\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12'\n" +
	"\abalance\x18\x05 \x01(\v2\r.wallet.MoneyR\abalance\"}\n" +
	"\x16ProcessRollbackRequest\x12\x1f\n" +
	"\vprovider_id\x18\x01 \x01(\tR\n" +
	"providerId\x12B\n" +
	"\x10rollback_request\x18\x02 \x01(\v2\x17.casino.RollbackRequestR\x0frollbackRequest\"\xc7\x01\n" +
	"\x17ProcessRollbackResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"error_code\x18\x03 \x01(\tR\terrorCode\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12'\n" +
	"\abalance\x18\x05 \x01(\v2\r.wallet.MoneyR\abalance2\x95\x05\n" +
	"\rCasinoService\x12@\n" +
	"\tListGames\x12\x18.casino.ListGamesRequest\x1a\x19.casino.ListGamesResponse\x12/\n" +
	"\aGetGame\x12\x16.casino.GetGameRequest\x1a\f.casino.Game\x12L\n" +
	"\rGetCategories\x12\x1c.casino.GetCategoriesRequest\x1a\x1d.casino.GetCategoriesResponse\x12I\n" +
	"\fGetProviders\x12\x1b.casino.GetProvidersRequest\x1a\x1c.casino.GetProvidersResponse\x12C\n" +
	"\n" +
	"LaunchGame\x12\x19.casino.LaunchGameRequest\x1a\x1a.casino.LaunchGameResponse\x12U\n" +
	"\x10GetPlayerHistory\x12\x1f.casino.GetPlayerHistoryRequest\x1a .casino.GetPlayerHistoryResponse\x12C\n" +
	"\n" +
	"ProcessBet\x12\x19.casino.ProcessBetRequest\x1a\x1a.casino.ProcessBetResponse\x12C\n" +
	"\n" +
	"ProcessWin\x12\x19.casino.ProcessWinRequest\x1a\x1a.casino.ProcessWinResponse\x12R\n" +
	"\x0fProcessRollback\x12\x1e.casino.ProcessRollbackRequest\x1a\x1f.casino.ProcessRollbackResponseB3Z1github.com/Silicon-Savannah-Solutions/bethela-rpcb\x06proto3"

var (
	file_casino_service_proto_rawDescOnce sync.Once
	file_casino_service_proto_rawDescData []byte
)

func file_casino_service_proto_rawDescGZIP() []byte {
	file_casino_service_proto_rawDescOnce.Do(func() {
		file_casino_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_casino_service_proto_rawDesc), len(file_casino_service_proto_rawDesc)))
	})
	return file_casino_service_proto_rawDescData
}

var file_casino_service_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_casino_service_proto_goTypes = []any{
	(*ListGamesRequest)(nil),         // 0: casino.ListGamesRequest
	(*ListGamesResponse)(nil),        // 1: casino.ListGamesResponse
	(*GetGameRequest)(nil),           // 2: casino.GetGameRequest
	(*GetCategoriesRequest)(nil),     // 3: casino.GetCategoriesRequest
	(*Category)(nil),                 // 4: casino.Category
	(*GetCategoriesResponse)(nil),    // 5: casino.GetCategoriesResponse
	(*GetProvidersRequest)(nil),      // 6: casino.GetProvidersRequest
	(*Provider)(nil),                 // 7: casino.Provider
	(*GetProvidersResponse)(nil),     // 8: casino.GetProvidersResponse
	(*ServiceLaunchRequest)(nil),     // 9: casino.ServiceLaunchRequest
	(*ServiceLaunchResponse)(nil),    // 10: casino.ServiceLaunchResponse
	(*GetPlayerHistoryRequest)(nil),  // 11: casino.GetPlayerHistoryRequest
	(*GameSession)(nil),              // 12: casino.GameSession
	(*GetPlayerHistoryResponse)(nil), // 13: casino.GetPlayerHistoryResponse
	(*ProcessBetRequest)(nil),        // 14: casino.ProcessBetRequest
	(*ProcessBetResponse)(nil),       // 15: casino.ProcessBetResponse
	(*ProcessWinRequest)(nil),        // 16: casino.ProcessWinRequest
	(*ProcessWinResponse)(nil),       // 17: casino.ProcessWinResponse
	(*ProcessRollbackRequest)(nil),   // 18: casino.ProcessRollbackRequest
	(*ProcessRollbackResponse)(nil),  // 19: casino.ProcessRollbackResponse
	(*Game)(nil),                     // 20: casino.Game
	(*timestamppb.Timestamp)(nil),    // 21: google.protobuf.Timestamp
	(*Money)(nil),                    // 22: wallet.Money
	(*BetRequest)(nil),               // 23: casino.BetRequest
	(*WinRequest)(nil),               // 24: casino.WinRequest
	(*RollbackRequest)(nil),          // 25: casino.RollbackRequest
	(*LaunchGameRequest)(nil),        // 26: casino.LaunchGameRequest
	(*LaunchGameResponse)(nil),       // 27: casino.LaunchGameResponse
}
var file_casino_service_proto_depIdxs = []int32{
	20, // 0: casino.ListGamesResponse.games:type_name -> casino.Game
	4,  // 1: casino.GetCategoriesResponse.categories:type_name -> casino.Category
	7,  // 2: casino.GetProvidersResponse.providers:type_name -> casino.Provider
	21, // 3: casino.ServiceLaunchResponse.expires_at:type_name -> google.protobuf.Timestamp
	21, // 4: casino.GetPlayerHistoryRequest.start_date:type_name -> google.protobuf.Timestamp
	21, // 5: casino.GetPlayerHistoryRequest.end_date:type_name -> google.protobuf.Timestamp
	21, // 6: casino.GameSession.start_time:type_name -> google.protobuf.Timestamp
	21, // 7: casino.GameSession.end_time:type_name -> google.protobuf.Timestamp
	22, // 8: casino.GameSession.bet_amount:type_name -> wallet.Money
	22, // 9: casino.GameSession.win_amount:type_name -> wallet.Money
	22, // 10: casino.GameSession.net_position:type_name -> wallet.Money
	12, // 11: casino.GetPlayerHistoryResponse.sessions:type_name -> casino.GameSession
	23, // 12: casino.ProcessBetRequest.bet_request:type_name -> casino.BetRequest
	22, // 13: casino.ProcessBetResponse.balance:type_name -> wallet.Money
	24, // 14: casino.ProcessWinRequest.win_request:type_name -> casino.WinRequest
	22, // 15: casino.ProcessWinResponse.balance:type_name -> wallet.Money
	25, // 16: casino.ProcessRollbackRequest.rollback_request:type_name -> casino.RollbackRequest
	22, // 17: casino.ProcessRollbackResponse.balance:type_name -> wallet.Money
	0,  // 18: casino.CasinoService.ListGames:input_type -> casino.ListGamesRequest
	2,  // 19: casino.CasinoService.GetGame:input_type -> casino.GetGameRequest
	3,  // 20: casino.CasinoService.GetCategories:input_type -> casino.GetCategoriesRequest
	6,  // 21: casino.CasinoService.GetProviders:input_type -> casino.GetProvidersRequest
	26, // 22: casino.CasinoService.LaunchGame:input_type -> casino.LaunchGameRequest
	11, // 23: casino.CasinoService.GetPlayerHistory:input_type -> casino.GetPlayerHistoryRequest
	14, // 24: casino.CasinoService.ProcessBet:input_type -> casino.ProcessBetRequest
	16, // 25: casino.CasinoService.ProcessWin:input_type -> casino.ProcessWinRequest
	18, // 26: casino.CasinoService.ProcessRollback:input_type -> casino.ProcessRollbackRequest
	1,  // 27: casino.CasinoService.ListGames:output_type -> casino.ListGamesResponse
	20, // 28: casino.CasinoService.GetGame:output_type -> casino.Game
	5,  // 29: casino.CasinoService.GetCategories:output_type -> casino.GetCategoriesResponse
	8,  // 30: casino.CasinoService.GetProviders:output_type -> casino.GetProvidersResponse
	27, // 31: casino.CasinoService.LaunchGame:output_type -> casino.LaunchGameResponse
	13, // 32: casino.CasinoService.GetPlayerHistory:output_type -> casino.GetPlayerHistoryResponse
	15, // 33: casino.CasinoService.ProcessBet:output_type -> casino.ProcessBetResponse
	17, // 34: casino.CasinoService.ProcessWin:output_type -> casino.ProcessWinResponse
	19, // 35: casino.CasinoService.ProcessRollback:output_type -> casino.ProcessRollbackResponse
	27, // [27:36] is the sub-list for method output_type
	18, // [18:27] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_casino_service_proto_init() }
func file_casino_service_proto_init() {
	if File_casino_service_proto != nil {
		return
	}
	file_wallet_proto_init()
	file_casino_provider_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_casino_service_proto_rawDesc), len(file_casino_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_casino_service_proto_goTypes,
		DependencyIndexes: file_casino_service_proto_depIdxs,
		MessageInfos:      file_casino_service_proto_msgTypes,
	}.Build()
	File_casino_service_proto = out.File
	file_casino_service_proto_goTypes = nil
	file_casino_service_proto_depIdxs = nil
}
