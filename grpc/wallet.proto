syntax = "proto3";

package wallet;

option go_package = "github.com/Silicon-Savannah-Solutions/bethela-rpc";


service WalletService {
    rpc C2B(C2BRequest)  returns (TransactionResponse);

    rpc B2C(B2CRequest) returns (TransactionResponse);

    rpc TransactionInfo(TransactionRequest) returns (TransactionResponse);

    rpc Deposit(DepositRequest) returns (DepositResponse);

    rpc Withdraw(WithdrawRequest) returns (WithdrawResponse);

    rpc TakeLien(LienRequest) returns (LienResponse);

    rpc Revertlien(RevertLienRequest) returns (RevertLienResponse);

    rpc CommitLien(CommitLienRequest) returns (TransactionResponse);

    rpc ManualReconciliation(ManualReconciliationRequest) returns (ManualReconciliationResponse);

    // wallet info
    rpc GetWalletByUserID(GetWalletByUserIDRequest) returns (Wallet);
    rpc CreateWallet(CreateWalletRequest) returns (Wallet);
    rpc GetWalletByID(GetWalletByIDRequest) returns (Wallet);
    rpc GetBalance(GetBalanceRequest) returns (Balance);
}

enum TransactionStatus {
    UMBIGUOUS = 0;
    PENDING = 1;
    SUCCESS = 2;
    FAILED = 3;
}

enum LienType {
    ALL = 0;
    WiTHDRAW = 1;
    NON_WITHDRAW = 2;
    BONUS = 3;
}

message Money {
    int64 amount = 1;
    string currency = 2;
}

message Balance {
    string balance_type =1;
    Money amount = 2;
}

message Wallet {
    string wallet_id = 1;
    repeated Money balances = 2;
}

message C2BRequest {
    string user_id = 2;
    Money amount = 3;
}

message B2CRequest {
    string user_id = 2;
    Money amount = 3;
}

message TransactionRequest {
    string transaction_id = 1;
}

message TransactionResponse {
    string transaction_id = 1;
    TransactionStatus status = 2;
    string message = 3;
    Money amount = 4;
}

message TransactionInfo {
    string transaction_id = 1;
    string user_id = 2;
    Money amount = 3;
    TransactionStatus status = 4;
    string message = 5;
}

message GetWalletByUserIDRequest {
    string user_id = 1;
}

message CreateWalletRequest {
    string user_id = 1;
    string currency = 2;
}

message GetWalletByIDRequest {
    string wallet_id = 1;
}

message GetBalanceRequest {
    string user_id = 1;
    string wallet_id = 2;
}

// used by the wallets after transaction is completed

message DepositRequest {
    string transaction_id = 1;
    Money amount = 2;
    TransactionStatus status = 3;
}

message DepositResponse {
    bool success = 1;
}

message WithdrawRequest {
    string transaction_id = 1;
    Money amount = 2;
    TransactionStatus status = 3;
}

message WithdrawResponse {
    bool success = 1;
}

message LienRequest {
    string user_id = 1;
    Money amount = 2;
    LienType lien_type = 3;
}

message LienResponse {
    uint64 lien_id = 1;
    TransactionStatus status = 2;
    string message = 3;
}

message RevertLienRequest {
    uint64 lien_id = 1;
    string user_id = 2;
}

message RevertLienResponse {
    bool success = 1;
    string message = 2;
}

message CommitLienRequest {
    uint64 lien_id = 1;
}

message CommitLienResponse {
    bool success = 1;
    string message = 2;
}

message ManualReconciliationRequest {
    string transaction_id = 1;
    Money amount = 2;
}

message ManualReconciliationResponse {
    bool success = 1;
    string message = 2;
}
