syntax = "proto3";

package provider;

option go_package = "github.com/travoroguna/bethela-rpc";

import "google/protobuf/timestamp.proto";

// ProviderInterface - Standard API that each mobile money provider MUST implement
// Each MNO (M-Pesa, MTN, Airtel, etc.) will implement this interface
service ProviderInterface {
  // Initiate a payment from customer to business (C2B)
  rpc InitiatePayment(InitiatePaymentRequest) returns (PaymentResponse);
  
  // Send money from business to customer (B2C)
  rpc SendMoney(SendMoneyRequest) returns (PaymentResponse);
  
  // Check status of a transaction
  rpc CheckTransactionStatus(StatusRequest) returns (StatusResponse);
  
  // Get account balance
  rpc GetAccountBalance(BalanceRequest) returns (BalanceResponse);
  
  // Validate a customer account
  rpc ValidateAccount(ValidateAccountRequest) returns (ValidateAccountResponse);
  
  // Reverse a transaction
  rpc ReverseTransaction(ReversalRequest) returns (ReversalResponse);
}

// Common currency representation
message Money {
  string currency_code = 1; // ISO 4217 currency code (e.g., KES, UGX, NGN)
  double amount = 2;
}

// Authentication details required by provider
message Authentication {
  string api_key = 1;
  string api_secret = 2;
  string business_number = 3; // Business short code, merchant ID, etc.
  string initiator_name = 4; // For providers that require this
  string security_credential = 5; // Encrypted credentials
  map<string, string> extra_credentials = 6; // Any additional provider-specific auth params
}

// InitiatePaymentRequest - C2B payment
message InitiatePaymentRequest {
  Authentication auth = 1;
  string transaction_reference = 2; // Client-generated unique reference
  Money amount = 3;
  string customer_number = 4; // Phone number with country code
  string description = 5;
  string callback_url = 6; // Webhook URL for async completion
  string return_url = 7; // Redirect URL for web flows
  string transaction_type = 8; // Provider-specific type like "CustomerPayBillOnline"
  map<string, string> metadata = 9; // Additional provider-specific parameters
}

// SendMoneyRequest - B2C payment
message SendMoneyRequest {
  Authentication auth = 1;
  string transaction_reference = 2; // Client-generated unique reference
  Money amount = 3;
  string recipient_number = 4; // Phone number with country code
  string reason = 5; // e.g., "salary", "refund", "promotion"
  string description = 6;
  string callback_url = 7; // Webhook URL for async completion
  map<string, string> metadata = 8; // Additional provider-specific parameters
}

// Common payment response format
message PaymentResponse {
  string provider_transaction_id = 1; // Transaction ID from provider
  string client_transaction_id = 2; // Original reference from request
  PaymentStatus status = 3;
  string status_reason = 4; // Reason for success/failure
  string receipt_number = 5; // If provider issues receipts
  Money amount = 6;
  google.protobuf.Timestamp created_at = 7;
  map<string, string> provider_metadata = 8; // Provider-specific response data
}

enum PaymentStatus {
  PAYMENT_STATUS_UNSPECIFIED = 0;
  PAYMENT_STATUS_PENDING = 1;
  PAYMENT_STATUS_PROCESSING = 2;
  PAYMENT_STATUS_COMPLETED = 3;
  PAYMENT_STATUS_FAILED = 4;
  PAYMENT_STATUS_CANCELLED = 5;
  PAYMENT_STATUS_EXPIRED = 6;
  PAYMENT_STATUS_REVERSED = 7;
}

// StatusRequest to check transaction status
message StatusRequest {
  Authentication auth = 1;
  string provider_transaction_id = 2; // Provider-generated ID
  string client_transaction_id = 3; // Client-generated reference
}

// StatusResponse for transaction status check
message StatusResponse {
  string provider_transaction_id = 1;
  string client_transaction_id = 2;
  PaymentStatus status = 3;
  string status_reason = 4;
  Money amount = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  map<string, string> provider_metadata = 8;
}

// BalanceRequest to check account balance
message BalanceRequest {
  Authentication auth = 1;
  string account_identifier = 2; // Optional: specific account within business
}

// BalanceResponse for account balance
message BalanceResponse {
  repeated Money balances = 1; // Some providers support multiple currency balances
  string account_number = 2;
  google.protobuf.Timestamp as_of = 3; // When the balance was determined
  map<string, string> provider_metadata = 4;
}

// ValidateAccountRequest to validate customer account
message ValidateAccountRequest {
  Authentication auth = 1;
  string account_number = 2; // Typically phone number
  string account_type = 3; // Optional: specific account type
}

// ValidateAccountResponse for account validation
message ValidateAccountResponse {
  bool is_valid = 1;
  string account_holder_name = 2; // If provider returns the account holder's name
  string account_status = 3; // "active", "dormant", etc.
  string message = 4;
  map<string, string> provider_metadata = 5;
}

// ReversalRequest to reverse a transaction
message ReversalRequest {
  Authentication auth = 1;
  string provider_transaction_id = 2;
  string client_transaction_id = 3;
  Money amount = 4; // Some providers need amount for reversal
  string reason = 5;
  string callback_url = 6; // For async completion notification
}

// ReversalResponse for transaction reversal
message ReversalResponse {
  string reversal_id = 1;
  string original_transaction_id = 2;
  PaymentStatus status = 3;
  string message = 4;
  google.protobuf.Timestamp processed_at = 5;
  map<string, string> provider_metadata = 6;
}